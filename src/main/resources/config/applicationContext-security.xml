<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <http auto-config='true'>
        <intercept-url pattern="/user/**" access="ROLE_USER"/>
        <intercept-url pattern="/admin/**" access="ROLE_ADMIN"/>
        <intercept-url pattern="/prijavljivanje" access="ROLE_ANONYMOUS"/>
        <intercept-url pattern="/registracija" access="ROLE_ANONYMOUS"/>
        <form-login login-page='/prijavljivanje'
                    authentication-failure-url="/prijavljivanje?error"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/?success"/>
        <access-denied-handler error-page="/accessDenied"/>
        <logout logout-success-url="/prijavljivanje?logout"/>
        <csrf/>
    </http>

    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/sziv"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value=""/>
    </beans:bean>

    <!-- username = admin , password = admin, hashed password $2a$10$cGtOPvnrDnS8EJWU4I4CNuu19v4GX8cBzv5TbLfTZoT8kwf9nxxjy-->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder hash="bcrypt"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <beans:bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailService" />
        <beans:property name="passwordEncoder" ref="encoder" />
    </beans:bean>

    <beans:bean id="userDetailService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="usersByUsernameQuery" value="select username,password,enabled from user where username = ?"/>
        <beans:property name="authoritiesByUsernameQuery" value="select username , (case when isAdmin = 1 then 'ROLE_ADMIN' else 'ROLE_USER' end) as authority from user where username = ?"/>
    </beans:bean>

    <beans:bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

</beans:beans>